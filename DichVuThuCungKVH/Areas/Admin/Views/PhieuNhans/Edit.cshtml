@model DichVuThuCungKVH.Model.PhieuNhan

@{
    ViewBag.Title = "Chỉnh Sửa Phiếu Nhận";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container-fluid px-4">
    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex justify-content-between align-items-center">
            <h6 class="m-0 font-weight-bold text-primary">Chỉnh Sửa Phiếu Nhận</h6>
            <a href="@Url.Action("PhieuCuaLuotSDDV", new { id = Model.MaSDDV })" class="btn btn-secondary">
                <i class="fas fa-arrow-left"></i> Quay lại
            </a>
        </div>
        <div class="card-body">
            @using (Html.BeginForm("Edit", "PhieuNhans", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.MaPhieu)
                @Html.HiddenFor(model => model.MaSDDV)

                <div class="row">
                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.MaTC, "Thú Cưng", new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-paw"></i></span>
                                @Html.DropDownList("MaTC", null, "Chọn thú cưng", new { @class = "form-control" })
                            </div>
                            <small class="form-text text-muted">Chỉ hiển thị thú cưng của khách hàng sử dụng dịch vụ này</small>
                            @Html.ValidationMessageFor(model => model.MaTC, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.MaSDDV, "Mã sử dụng dịch vụ", new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-calendar-check"></i></span>
                                @Html.TextBox("MaSDDV", Model.MaSDDV, new { @class = "form-control", @readonly = "readonly" })
                            </div>
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.TinhTrangTruocTiepNhan, "Tình Trạng Trước Tiếp Nhận", new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-camera"></i></span>
                                <input type="file" name="fileTruoc" class="form-control" accept="image/*" id="fileTruoc" onchange="previewImage(this, 'previewTruoc')" />
                            </div>
                            <div class="mt-2">
                                @if (!string.IsNullOrEmpty(Model.TinhTrangTruocTiepNhan))
                                {
                                    <img src="@Url.Content("~/Images/TinhTrangTruocTiepNhan/" + Model.TinhTrangTruocTiepNhan)" alt="Ảnh Trước Tiếp Nhận" style="max-width: 200px; max-height: 200px;" class="img-thumbnail mb-2" />
                                }
                                <img id="previewTruoc" src="#" alt="Preview" style="max-width: 200px; max-height: 200px; display: none;" class="img-thumbnail" />
                            </div>
                            @Html.ValidationMessageFor(model => model.TinhTrangTruocTiepNhan, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.NguoiGiao, "Người Giao", new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-user"></i></span>
                                @Html.DropDownList("NguoiGiao", null, "Chọn người giao", new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.NguoiGiao, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-6">
                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.NgayNhan, "Ngày Nhận", new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-calendar"></i></span>
                                @Html.EditorFor(model => model.NgayNhan, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.NgayNhan, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.TinhTrangSauTiepNhan, "Tình Trạng Sau Tiếp Nhận", new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-camera"></i></span>
                                <input type="file" name="fileSau" class="form-control" accept="image/*" id="fileSau" onchange="previewImage(this, 'previewSau')" />
                            </div>
                            <div class="mt-2">
                                @if (!string.IsNullOrEmpty(Model.TinhTrangSauTiepNhan))
                                {
                                    <img src="@Url.Content("~/Images/TinhTrangSauTiepNhan/" + Model.TinhTrangSauTiepNhan)" alt="Ảnh Sau Tiếp Nhận" style="max-width: 200px; max-height: 200px;" class="img-thumbnail mb-2" />
                                }
                                <img id="previewSau" src="#" alt="Preview" style="max-width: 200px; max-height: 200px; display: none;" class="img-thumbnail" />
                            </div>
                            @Html.ValidationMessageFor(model => model.TinhTrangSauTiepNhan, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.NguoiNhan, "Người Nhận", new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-user"></i></span>
                                @Html.DropDownList("NguoiNhan", null, "Chọn người nhận", new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.NguoiNhan, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.TinhTrangDichVu, "Tình Trạng Dịch Vụ", new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-tasks"></i></span>
                                @Html.EditorFor(model => model.TinhTrangDichVu, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.TinhTrangDichVu, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.NgayTra, "Ngày Trả", new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-calendar-check"></i></span>
                                @Html.EditorFor(model => model.NgayTra, new { htmlAttributes = new { @class = "form-control datetimepicker" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.NgayTra, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.NguoiTra, "Người Trả", new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-user"></i></span>
                                @Html.DropDownList("NguoiTra", null, "Chọn người trả", new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(model => model.NguoiTra, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group mb-3">
                            @Html.LabelFor(model => model.GhiChu, "Ghi Chú", new { @class = "form-label" })
                            <div class="input-group">
                                <span class="input-group-text"><i class="fas fa-sticky-note"></i></span>
                                @Html.EditorFor(model => model.GhiChu, new { htmlAttributes = new { @class = "form-control", placeholder = "Nhập ghi chú (nếu có)" } })
                            </div>
                            @Html.ValidationMessageFor(model => model.GhiChu, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group mt-4">
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-save"></i> Lưu
                    </button>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Khởi tạo datetimepicker
            $('.datetimepicker').datetimepicker({
                format: 'YYYY-MM-DD HH:mm:ss',
                sideBySide: true
            });
        });

        // Hàm preview ảnh
        function previewImage(input, previewId) {
            var preview = document.getElementById(previewId);
            if (input.files && input.files[0]) {
                var reader = new FileReader();
                
                reader.onload = function(e) {
                    preview.src = e.target.result;
                    preview.style.display = 'block';
                }
                
                reader.readAsDataURL(input.files[0]);
            } else {
                preview.src = '#';
                preview.style.display = 'none';
            }
        }
    </script>
}