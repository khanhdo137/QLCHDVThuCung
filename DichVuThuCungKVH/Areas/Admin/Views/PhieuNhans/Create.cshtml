@model DichVuThuCungKVH.Model.PhieuNhan

@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Create</h2>

@using (Html.BeginForm("Create", "PhieuNhans", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>PhieuNhan</h4>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.MaTC, "MaTC", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("MaTC", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.MaTC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MaSDDV, "MaSDDV", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.MaSDDV)
                <strong>@ViewBag.MaSDDV</strong>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TinhTrangTruocTiepNhan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="fileTinhTrangTruocTiepNhan" id="fileTinhTrangTruocTiepNhan" onchange="previewImage('fileTinhTrangTruocTiepNhan', 'previewTinhTrangTruocTiepNhan')" />
                <img id="previewTinhTrangTruocTiepNhan" src="#" alt="Preview" style="max-width: 200px; max-height: 200px; display: none;" />
                @Html.ValidationMessageFor(model => model.TinhTrangTruocTiepNhan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TinhTrangSauTiepNhan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="fileTinhTrangSauTiepNhan" id="fileTinhTrangSauTiepNhan" onchange="previewImage('fileTinhTrangSauTiepNhan', 'previewTinhTrangSauTiepNhan')" />
                <img id="previewTinhTrangSauTiepNhan" src="#" alt="Preview" style="max-width: 200px; max-height: 200px; display: none;" />
                @Html.ValidationMessageFor(model => model.TinhTrangSauTiepNhan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NguoiGiao, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NguoiGiao, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NguoiGiao, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NguoiNhan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NguoiNhan, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NguoiNhan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TinhTrangDichVu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TinhTrangDichVu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TinhTrangDichVu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NgayNhan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NgayNhan, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.NgayNhan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NgayTra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NgayTra, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
                @Html.ValidationMessageFor(model => model.NgayTra, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NguoiTra, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NguoiTra, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NguoiTra, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GhiChu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GhiChu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GhiChu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    function previewImage(inputId, imageId) {
        var input = document.getElementById(inputId);
        var image = document.getElementById(imageId);

        if (input.files && input.files[0]) {
            var reader = new FileReader();

            reader.onload = function (e) {
                image.src = e.target.result;
                image.style.display = 'block';  // Hiển thị ảnh
            };

            reader.readAsDataURL(input.files[0]);
        }
    }
</script>